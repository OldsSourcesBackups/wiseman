<?xml version="1.0"?>
<!-- ====================================================================== 
     Mar 22, 2006 9:55:07 AM                                                        

     Wiseman- tooling    
     ====================================================================== 
-->
<project name="Wiseman Tooling" default="install">
    <description>
            This is a build file for the Wiseman client implementation.
    </description>
	
	<!-- Load the properties -->
	<property file="project.properties"/>
	<property file="${user.home}/.ant.properties"/>
	<property name="gentestdir" value="gentest" />

	<!-- Test that a valid ant version is being used -->
	<condition property="valid.ant.version">
		<or>
		  <contains substring="1.6.5" string="${ant.version}" />	
		  <contains substring="1.7." string="${ant.version}" />	
		</or>
	</condition>
	<fail message="You should be using ant 1.6.5 or better."
	      unless="valid.ant.version"/>
	
	<!-- Compilation classpath -->
	  <path id="compile.classpath">
	    <fileset dir="${lib.dir}">
	      <include name="**/*.jar"/>
	    </fileset>
<!--	    <fileset dir="${lib.dir}/jaxws">
	      <include name="**/*.jar"/>
	    </fileset> -->
	    <fileset dir="${wiseman.root}/${lib.dir}">
	      <include name="**/*.jar"/>
	    </fileset>
	    <fileset dir="${wiseman.root}/${dist.dir}">
	      <include name="**/*.jar"/>
	    </fileset>
	  </path>	
	
	<target name="clean">
		<delete dir="${dist.dir}"/>
	    <delete dir="${build.dir}" />
	    <delete dir="${build.classes.dir}" />
	    <delete dir="${gen.src.dir}" />
	    <delete dir="${apidocs.dir}" />	
	</target>
	
	<!-- Recreate all necessary directories. -->
	<target name="init" depends="clean">
	    <tstamp />
	    <mkdir dir="${dist.dir}" />
	    <mkdir dir="${build.dir}" />
	    <mkdir dir="${build.classes.dir}" />
	    <mkdir dir="${test.build.classes.dir}" />
	    <mkdir dir="${gen.src.dir}" />
	    <mkdir dir="${doc.dir}" />
	    <mkdir dir="${apidocs.dir}" />	
	  </target>
	
	
	<!-- Compile -->
	<target name="compile" depends="init">
	  	<javac destdir="${build.classes.dir}"
	           debug="${debug}" fork="yes">
	      <classpath refid="compile.classpath" />
		  <src path="${src.dir}" />
	    </javac>
		
	  	<!--javac destdir="${test.build.classes.dir}"
	           debug="${debug}" fork="yes">
	      <classpath> 
	      		<path refid="compile.classpath" />
          		<path path="${build.classes.dir}" />
	      	</classpath>
	      	<src path="${test.src.dir}" />
	    </javac -->

		<copy todir="${build.classes.dir}">
	      <fileset dir="${src.dir}">
	        <include name="**/*.properties" />
	        <include name="**/*.vm" />
	      </fileset>
	    </copy>
	</target>

	<target name="jar" depends="compile">
	    <jar destfile="${client.jar.file}">
	      	<fileset dir="${build.classes.dir}">
	      		<include name="com/**"/>
	      		<include name="templates/**"/>
	      	</fileset>
	    </jar>
		<copy todir="${project.root}/${dist.dir}/tools">
			<fileset dir=".">
				<include name="*.bat" />
				<include name="*.sh" />
			</fileset>
		</copy>
    </target>
	  
    <target name="javadoc" depends="compile" description="Generate the javadocs">
       <javadoc sourcepath="${src.dir}" destdir="${apidocs.dir}" packagenames="*"> 
           <classpath>
               <path refid="compile.classpath" />
               <pathelement location="${build.classes.dir}" />
           </classpath>
       </javadoc>
    </target>

	
	
	<target name="install" depends="jar">
	</target>
	
	<target name="test">
		<mkdir dir="${gentestdir}"/>
		<!-- copy traffic light sample into test directory -->
		<copy todir="${gentestdir}" file="samples/templates/wsdl_war_template.jar"/>
		<unjar src="${gentestdir}/wsdl_war_template.jar" dest="gentest"/>
		<copy todir="${gentestdir}/xsd" file="samples/trafficlight_server/schemas/light.xsd"/>
		<copy todir="${gentestdir}/schemas" file="samples/trafficlight_server/schemas/light.xsd"/>
		<copy todir="${gentestdir}/schemas/schemas.wiseman.dev.java.net/traffic/1" file="samples/trafficlight_server/schemas/light.xsd"/>
		<copy todir="${gentestdir}/etc" file="samples/trafficlight_server/etc/binding.properties" overwrite="true"/>
		
		<!-- Overwrite project.properties with our version that has correct lib dir for testing -->
		<copy todir="${gentestdir}" file="lightgentest/project.properties" overwrite="true"/>
		<copy todir="${gentestdir}/etc" file="lightgentest/resource-handler-config.xml" overwrite="true"/>
		
		<!-- generate wsdl and source from schema -->
		<ant dir="${gentestdir}" target="generate" inheritAll="false"/>
		<copy todir="${gentestdir}/src">
			<fileset dir="${gentestdir}/gen-src"/>
		</copy>
		<!-- compile to make sure generated code is valid -->
		<ant dir="${gentestdir}" target="compile" inheritAll="false"/>
		
		<!-- insert actual code -->
		
		<!-- build war and deploy -->
		<ant dir="${gentestdir}" target="deploy" inheritAll="false"/>
		
		<!-- run junit test on deployed war -->
		
		
	</target>
	<!-- Task is meant to be an automated test of the 
		 code generation framework.
	 -->
 <!--   <target name="test" depends="jar" >
        <junit showoutput="true"
               fork="true" haltonfailure="true">
          <assertions>
            <enable/>
          </assertions>
            <batchtest>
                <fileset dir="${test.dir}">
                  <include name="**/*Test*.java"/>
                  <exclude name="**/*Interop*.java"/>
                </fileset>
             </batchtest>
            <classpath>
            	<path refid="compile.classpath" />
        	    <path path="${build.classes.dir}" />
        	    <path path="${test.build.classes.dir}" />
            </classpath>
          <formatter usefile="false" type="brief"/>
          <formatter type="xml"/>
          <jvmarg value="-Dwsman.dest=http://localhost:8080/wsman/" />
          <jvmarg value="-Dwsman.user=wsman" />
          <jvmarg value="-Dwsman.password=secret" />
          <jvmarg value="-Dwsman.basicauthentication=true" />
          <jvmarg value="-Dcom.sun.ws.management.xml.custom.packagenames=foo.test,com.hp.examples.ws.wsman.user" />
          <jvmarg value="-Dcom.sun.ws.management.xml.validate=true" />
        </junit>
    </target> -->
	
	<target name="autobuild" depends="javadoc,jar" />

</project>


